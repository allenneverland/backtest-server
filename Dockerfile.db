FROM timescale/timescaledb:latest-pg14

# 設置工作目錄
WORKDIR /app

# 複製遷移文件
COPY migrations/*.sql /app/migrations/

# 添加 TimescaleDB 配置，啟用job scheduling功能
RUN echo "# TimescaleDB 配置" > /etc/postgresql-custom.conf \
    && echo "shared_preload_libraries = 'timescaledb'" >> /etc/postgresql-custom.conf \
    && echo "timescaledb.max_background_workers = 16" >> /etc/postgresql-custom.conf \
    && echo "track_io_timing = on" >> /etc/postgresql-custom.conf \
    && echo "max_worker_processes = 32" >> /etc/postgresql-custom.conf \
    && echo "max_parallel_workers = 16" >> /etc/postgresql-custom.conf \
    && echo "max_parallel_workers_per_gather = 8" >> /etc/postgresql-custom.conf \
    && echo "work_mem = '64MB'" >> /etc/postgresql-custom.conf

# 創建配置加載腳本
RUN echo '#!/bin/bash' > /docker-entrypoint-initdb.d/000_load_custom_config.sh \
    && echo 'set -e' >> /docker-entrypoint-initdb.d/000_load_custom_config.sh \
    && echo 'echo "載入自定義 PostgreSQL 配置..."' >> /docker-entrypoint-initdb.d/000_load_custom_config.sh \
    && echo 'cat /etc/postgresql-custom.conf >> /var/lib/postgresql/data/postgresql.conf' >> /docker-entrypoint-initdb.d/000_load_custom_config.sh \
    && echo 'echo "✅ 自定義配置已載入"' >> /docker-entrypoint-initdb.d/000_load_custom_config.sh \
    && chmod +x /docker-entrypoint-initdb.d/000_load_custom_config.sh

# 創建輔助SQL文件，避免複雜的引號嵌套
RUN echo '  CREATE OR REPLACE FUNCTION run_sql_command(config JSONB)' > /tmp/sql_functions.sql \
    && echo '  RETURNS VOID AS \$\$' >> /tmp/sql_functions.sql \
    && echo '  BEGIN' >> /tmp/sql_functions.sql \
    && echo '      EXECUTE (config->>''sql_text'');' >> /tmp/sql_functions.sql \
    && echo '  END \$\$ LANGUAGE plpgsql;' >> /tmp/sql_functions.sql \
    && echo '' >> /tmp/sql_functions.sql \
    && echo '  -- 建立通用函數來創建調度任務' >> /tmp/sql_functions.sql \
    && echo '  CREATE OR REPLACE FUNCTION create_job_if_not_exists(' >> /tmp/sql_functions.sql \
    && echo '    job_name TEXT, ' >> /tmp/sql_functions.sql \
    && echo '    schedule_interval INTERVAL, ' >> /tmp/sql_functions.sql \
    && echo '    sql_command TEXT' >> /tmp/sql_functions.sql \
    && echo '  ) RETURNS BOOLEAN AS \$\$' >> /tmp/sql_functions.sql \
    && echo '  DECLARE' >> /tmp/sql_functions.sql \
    && echo '    job_id INTEGER;' >> /tmp/sql_functions.sql \
    && echo '  BEGIN' >> /tmp/sql_functions.sql \
    && echo '    SELECT j.job_id INTO job_id FROM timescaledb_information.jobs j' >> /tmp/sql_functions.sql \
    && echo '    WHERE jsonb_extract_path_text(j.config, ''job_name'') = job_name;' >> /tmp/sql_functions.sql \
    && echo '' >> /tmp/sql_functions.sql \
    && echo '    IF job_id IS NULL THEN' >> /tmp/sql_functions.sql \
    && echo '      SELECT add_job(' >> /tmp/sql_functions.sql \
    && echo '        ''run_sql_command'',' >> /tmp/sql_functions.sql \
    && echo '        schedule_interval,' >> /tmp/sql_functions.sql \
    && echo '        jsonb_build_object(''sql_text'', sql_command, ''job_name'', job_name),' >> /tmp/sql_functions.sql \
    && echo '        now()' >> /tmp/sql_functions.sql \
    && echo '      ) INTO job_id;' >> /tmp/sql_functions.sql \
    && echo '      RETURN TRUE;' >> /tmp/sql_functions.sql \
    && echo '    ELSE' >> /tmp/sql_functions.sql \
    && echo '      RETURN FALSE;' >> /tmp/sql_functions.sql \
    && echo '    END IF;' >> /tmp/sql_functions.sql \
    && echo '  END;' >> /tmp/sql_functions.sql \
    && echo '  \$\$ LANGUAGE plpgsql;' >> /tmp/sql_functions.sql

# 創建初始化腳本
RUN echo '#!/bin/bash' > /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo 'set -e' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo 'echo "創建必要的擴展..."' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo 'psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo '  CREATE EXTENSION IF NOT EXISTS timescaledb;' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo '  -- 設置TimescaleDB作業調度系統' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo '  CREATE SCHEMA IF NOT EXISTS timescaledb_jobs;' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo '  -- 創建用於執行任意SQL命令的輔助函數' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && cat /tmp/sql_functions.sql >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo 'EOSQL' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && echo 'echo "✅ 必要的擴展已創建"' >> /docker-entrypoint-initdb.d/001_setup_extensions.sh \
    && chmod +x /docker-entrypoint-initdb.d/001_setup_extensions.sh

# 創建SQL遷移腳本
RUN echo '#!/bin/bash' > /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'set -e' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'echo "===== 開始執行數據庫遷移 ====="' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'cd /app/migrations' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'for migration in $(ls -v *.sql 2>/dev/null)' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'do' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo '  echo "🔄 執行遷移: $migration"' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo '  psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" -f "$migration"' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo '  if [ $? -ne 0 ]; then' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo '    echo "❌ 遷移 $migration 失敗"' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo '    exit 1' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo '  fi' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'done' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'echo "✅ 數據庫遷移完成"' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && echo 'echo "===== 遷移程序結束 ====="' >> /docker-entrypoint-initdb.d/002_run_migrations.sh \
    && chmod +x /docker-entrypoint-initdb.d/002_run_migrations.sh 