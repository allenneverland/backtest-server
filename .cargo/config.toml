[build]
# 限制並行任務數以控制記憶體使用
jobs = 4
# 使用 mold/lld 作為連結器（更快）
rustflags = ["-C", "link-arg=-fuse-ld=lld"]
# 增量編譯
incremental = true
# 設定目標目錄以便快取
target-dir = "/tmp/target"

[target.x86_64-unknown-linux-gnu]
# 使用 clang 和 lld 進行連結
linker = "clang"
rustflags = [
    "-C", "link-arg=-fuse-ld=lld",
    "-C", "target-cpu=native",
    "-C", "link-arg=-Wl,--compress-debug-sections=zlib"
]

[profile.dev]
# 開發模式優化
opt-level = 0
debug = 1  # 減少 debug 資訊
split-debuginfo = "packed"
# 加快編譯速度
incremental = true
# 降低 codegen-units 以減少記憶體使用
codegen-units = 256

[profile.dev.package."*"]
# 依賴項使用優化編譯
opt-level = 2

[profile.release]
# 發布版本優化
opt-level = 3
lto = "thin"  # thin LTO 比 fat LTO 快
codegen-units = 16  # 平衡編譯速度和運行效能
debug = 0
strip = true
panic = "abort"  # 減少二進位大小

[profile.release-fast]
# 快速發布編譯
inherits = "release"
lto = false
codegen-units = 256
incremental = true

[profile.release-small]
# 最小化二進位大小
inherits = "release"
opt-level = "z"
lto = true
codegen-units = 1
strip = true

[net]
# 網路優化
git-fetch-with-cli = true
retry = 2
offline = false

[registries.crates-io]
# 使用 sparse protocol（Rust 1.68+）
protocol = "sparse"

[http]
# HTTP 設定優化
multiplexing = false  # 避免某些代理問題
timeout = 60

[env]
# 環境變數
RUST_BACKTRACE = "1"
# 設定 rustc 包裝器
RUSTC_WRAPPER = "sccache"